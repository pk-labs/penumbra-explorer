name: Deploy to Google Cloud

on:
  workflow_call:
    inputs:
      env_name:
        required: true
        type: string
      env_name_label:
        required: true
        type: string
      gcp_region:
        required: true
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    outputs:
      deployment_id: ${{ steps.deployment.outputs.deployment_id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download .env artifact
        uses: actions/download-artifact@v4
        with:
          name: env-file

      - uses: chrnorm/deployment-action@v2
        id: deployment
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: ${{ inputs.env_name_label }}
          initial-status: in_progress

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Check types
        run: npm run typecheck

      - name: Lint JavaScript
        run: npm run lint

      - name: Lint CSS
        run: npm run stylelint

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Create coverage badge JSON gist
        uses: gaelgirodon/ci-badges-action@v1
        with:
          gist-id: 9208254a7b67b695d104a875931624d8
          token: ${{ secrets.GIST_TOKEN }}

      - name: Cache .next directory
        uses: actions/cache@v4
        with:
          path: .next
          key: ${{ runner.os }}-next-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
              ${{ runner.os }}-next-

      - name: Enforce minimum coverage
        uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          min_coverage: 90

      - if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          state: failure
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

  deploy:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download .env artifact
        uses: actions/download-artifact@v4
        with:
          name: env-file

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy to Google Cloud
        run: |
          gcloud config set compute/region ${{ inputs.gcp_region }}
          gcloud builds submit --config cloudbuild.yaml --substitutions=_REGION=${{ inputs.gcp_region }},_ENV_NAME=${{ inputs.env_name }}

      - uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          state: success
          deployment-id: ${{ needs.test.outputs.deployment_id }}

      - if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          state: failure
          deployment-id: ${{ needs.test.outputs.deployment_id }}

